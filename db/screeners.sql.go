// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: screeners.sql

package db

import (
	"context"
)

const createScreener = `-- name: CreateScreener :one
INSERT INTO screeners (username, name, rules)
VALUES ($1, $2, $3)
RETURNING id, name, rules, username
`

type CreateScreenerParams struct {
	Username string `json:"username"`
	Name     string `json:"name"`
	Rules    []byte `json:"rules"`
}

func (q *Queries) CreateScreener(ctx context.Context, arg CreateScreenerParams) (Screener, error) {
	row := q.db.QueryRow(ctx, createScreener, arg.Username, arg.Name, arg.Rules)
	var i Screener
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Rules,
		&i.Username,
	)
	return i, err
}

const getScreener = `-- name: GetScreener :one
SELECT id, name, rules, username FROM screeners
WHERE id = $1
`

func (q *Queries) GetScreener(ctx context.Context, id int32) (Screener, error) {
	row := q.db.QueryRow(ctx, getScreener, id)
	var i Screener
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Rules,
		&i.Username,
	)
	return i, err
}
